---
import type { Props } from '@astrojs/starlight/props'
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro'
import { verifyToken } from '../lib/auth';
import { generateSidebar, convertToStarlightSidebar } from '../utils/sidebarUtils';

type StarlightPageFrontmatter = any;

console.log('pages/index.astro');

function getRoleLabel(userRole: string) {
  switch (userRole) {
    case 'admin':
      return 'admin';
    case 'guest':
      return 'guest';
    case 'companyMember':
      return 'company member';
    case 'editor':
      return 'editor';
    default:
      return userRole; // Returns the original value if it doesn't match any case
  }
}

let user;
const token = Astro.cookies.get('token')?.value;
// Check the token in the cookie if the user is not set
if (token) {
  try {
    user = verifyToken(token);
  } catch (error) {
    console.error('pages/index.astro Invalid token:', error);
  }
}

// Ensure user exists before accessing its properties
if (user) {
  console.log('pages/index.astro User ID:', user.id);
  console.log('pages/index.astro User username:', user.username);
  console.log('pages/index.astro User role:', user.role);
}

const userRole = user?.role || 'guest';
console.log('pages/index.astro Userrole:', userRole);
const dynamicSidebar = generateSidebar(userRole);
const starlightSidebar = convertToStarlightSidebar(dynamicSidebar);

const roleLabel = getRoleLabel(userRole);

const title = "Manual";
const description = "Get started building your docs site with Starlight.";
const tagline = `Documentation for ${roleLabel}`;

const logoutButton = user ? {
  text: "Logout",
  link: "#",
  icon: "right-arrow",
  variant: "primary",
  id: "logout-button",
  class: "logout-button astro-button",
  'data-logout': 'true',
  custom: true
} : {
  text: "Login",
  link: "/login",
  icon: "right-arrow",
  variant: "primary"
};

// Initialize Typesense client configuration
const typesenseConfig = {
  apiKey: import.meta.env.PUBLIC_TYPESENSE_API_KEY,
  host: import.meta.env.PUBLIC_TYPESENSE_HOST,
  port: import.meta.env.PUBLIC_TYPESENSE_PORT,
  protocol: import.meta.env.PUBLIC_TYPESENSE_PROTOCOL
};

console.log('Server-side: Typesense config:', typesenseConfig);

const frontmatter: StarlightPageFrontmatter = {
  title: title,
  description: description,
  template: 'splash',
  hero: {
    tagline: tagline,
    actions: [
      logoutButton as any, // Force type compatibility
      {
        text: "Visit Our Website",
        link: "https://example.com", // Replace with the appropriate link
        icon: "external"
      }
    ]
  },
  // Add other properties as required by StarlightPageFrontmatter
};
---

<StarlightPage
  frontmatter={frontmatter}
  hasSidebar={true}
  sidebar={starlightSidebar}
>
</StarlightPage>

<script>
  console.log('Initial script executed');
</script>

<script>
  function handleLogout(event: { preventDefault: () => void; }) {
    event.preventDefault();
    console.log('pages/index.astro Logout function called');
    
    fetch('/api/auth/logout', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => {
      console.log('pages/index.astro Logout response status:', response.status);
      if (response.ok) {
        console.log('pages/index.astro Logout successful');
        localStorage.removeItem('token');
        document.cookie = 'token=; Max-Age=0; path=/; domain=' + location.hostname;
        window.location.href = '/';
      } else {
        console.error('pages/index.astro Logout failed');
      }
    })
    .catch(error => {
      console.error('pages/index.astro Error during logout:', error);
    });
  }

  function setupLogoutButton() {
    // Find the button by its text "Logout"
    const buttons = Array.from(document.querySelectorAll('a, button'));
    const logoutButton = buttons.find(button => button.textContent?.trim() === 'Logout');

    if (logoutButton) {
      // console.log('pages/index.astro Logout button found:', logoutButton);
      logoutButton.addEventListener('click', handleLogout);
      
      // Add custom attributes
      logoutButton.setAttribute('data-logout', 'true');
      logoutButton.id = 'logout-button';
      logoutButton.classList.add('logout-button', 'astro-button');
    } else {
      // console.log('pages/index.astro Logout button not found');
    }
  }

  function attemptSetup() {
    setupLogoutButton();
    if (!document.querySelector('[data-logout]')) {
      // console.log('pages/index.astro Retrying setup...');
      setTimeout(attemptSetup, 500);
    }
  }

  // Try setting up the button after DOM is loaded
  document.addEventListener('DOMContentLoaded', attemptSetup);

  // Try setting up the button after the page is fully loaded
  window.addEventListener('load', attemptSetup);

  // Listen for the Astro page load event
  document.addEventListener('astro:page-load', attemptSetup);

  // Check if the user is logged in on the client-side
  const token = localStorage.getItem('token');
  if (token) {
    fetch('/api/auth/me', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    })
    .then(response => response.json())
    .then(user => {
      const content = document.getElementById('content');
      if (content) {
        content.innerHTML = `
          <div>
            <h1>Hello, ${user.username || user.username}!</h1>
            <p>Select a topic of interest or use the search bar.</p>
          </div>
        `;
      }
      attemptSetup();
    })
    .catch(error => {
      console.error('pages/index.astro Error fetching user data:', error);
      localStorage.removeItem('token');
    });
  }

  console.log('pages/index.astro Script loaded');
</script>
